# This file is located on the host computer at /etc/nginx/sites-available/ckan and contains configuration for forwarding to our docker cluster.

proxy_cache_path /tmp/nginx_cache levels=1:2 keys_zone=cache:30m max_size=250m;
proxy_temp_path /tmp/nginx_proxy 1 2;

server {
    server_name 34.28.204.100;
    client_max_body_size 100M;
    server_name data.naturalcapitalproject.stanford.edu;

    location / {
        proxy_pass https://localhost:8443;
        #uwsgi_pass uwsgi://localhost:8080;
        proxy_set_header Host $host;
        proxy_cache cache;
        proxy_cache_bypass $cookie_auth_tkt;
        proxy_no_cache $cookie_auth_tkt;
        proxy_cache_valid 30m;
        proxy_cache_key $host$scheme$proxy_host$request_uri;
        # In emergency comment out line to force caching
        # proxy_ignore_headers X-Accel-Expires Expires Cache-Control;

	# Added 2023-08-28 to try to resolve "upstream prematurely closed connection while reading response header from upstream, for large requests" in logs
	# Suggested by https://stackoverflow.com/a/48858256
	proxy_connect_timeout 10s;
	proxy_read_timeout 15s;

    }

    if ($http_referer ~ ^https?://data.naturalcapitalproject.stanford.edu/apps/layer-clipper/) {
        rewrite ^ /apps/layer-clipper$uri;
    }
    location /apps/layer-clipper/ {
	proxy_pass http://127.0.0.1:8866/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_read_timeout 86400;
    }


    listen [::]:443 ssl ipv6only=on; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/data.naturalcapitalproject.stanford.edu/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/data.naturalcapitalproject.stanford.edu/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}


server {
    if ($host = data.naturalcapitalproject.stanford.edu) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    listen 80;
    listen [::]:80;
    server_name 34.28.204.100;
    server_name data.naturalcapitalproject.stanford.edu;
    return 404; # managed by Certbot


}